openapi: 3.0.0
info:
  version: "1.0"
  title: Recruiting
  description: "<p>The Recruiting API allows you to GET open job positions (<i>XML</i> endpoint) and POST applications to Personio (<i>Applicant</i> endpoint). Other methods are currently not supported.</p>
    <p>For the Recruiting API endpoint, please use the separate access token provided under Settings > API > Access Data > Recruiting API Access Tokens as described above.</p>
    <p><b>POST</b><p/>
    <ul>
    <li>Applicants can only be transferred via the API for assigned job postings that are published at that time</li>
    <li>Size per documentation is a maximum of 20 MB</li>
    <li>General transmission size is a maximum of 64 MB</li>
    <li>The following document types are allowed: 'pdf', 'docx', 'doc', 'jpg', 'png', 'txt', 'jpeg', 'odt', 'ods', 'xlsx', 'rtf', 'xls', 'pptx', 'ppt', 'gif', 'tif', 'tiff', 'bmp', 'csv', 'rar', 'gz', 'zip', '7z'.</li>
    <li>System attributes are described in this documentation. You can also transfer user-defined applicant attributes using the applicant API. To do this, check the dynamic name of the respective attribute in Personio under Settings > Recruiting > Applicant > Edit Attribute > API Attribute Name</li>
    <li>You can transfer job postings from Personio to your career site via xml feed. You can find further information here.</li>
    </ul>"
paths:
  /xml:
    get:
      servers:
        - url: https://{hostname}.jobs.personio.de
          description: Career Site URL
          variables:
            hostname:
              default: personio
              description: Company hostname.
      tags:
        - XML
      summary: Retrieve open positions
      parameters:
        - in: query
          name: language
          schema:
            type: string
          required: true
          description: "Language code. One of: de, en, fr, es, nl, it, pt."
      description: "<p>This is the job positions XML feed from the Company Career Site.</p>
        <p>The XML feed can be accessed in multiple languages, depending on the
        languages available for the Career Site. To URL of the XML feed in
        English is: https://mycompany.jobs.personio.de/xml?language=en</p>
        <p>This is the complete list of available languages and URLs:</p>
            <ul>
                <li>https://mycompany.jobs.personio.de/xml?language=de - German</li>
                <li>https://mycompany.jobs.personio.de/xml?language=en - English</li>
                <li>https://mycompany.jobs.personio.de/xml?language=fr - French</li>
                <li>https://mycompany.jobs.personio.de/xml?language=es - Spanish</li>
                <li>https://mycompany.jobs.personio.de/xml?language=nl - Dutch</li>
                <li>https://mycompany.jobs.personio.de/xml?language=it - Italian</li>
                <li>https://mycompany.jobs.personio.de/xml?language=pt - Portuguese</li>
            </ul>"
      responses:
        "200":
          description: "An example response looks like this:"
          content:
            application/xml:
              schema:
                $ref: "#/components/schemas/XmlResponse"
  /recruiting/applicant:
    post:
      security:
        - BearerAuth: [ ]
      tags:
        - Applicant
      summary: Passing applications to Personio
      description: "<p>Description of the applicant endpoint of the Personio Recruiting API <p/>
        <p>The API access token as well as the company ID can be found in your Personio account under Settings > API.</p>
        <p>
        <strong>A note on categorised documents</strong><br/>
        Categorised documents are represented as a multidimensional array. <br/>
        Each object has two fields: 'file' and 'category'. The 'file' field contains an upload stream. The 'category field' contains the category name, the allowed category names are listed in the table above. An example in pseudo code would be: <br/>
        <pre>
        val request = HttpRequest()<br/><br/>
        // Example of a CV file <br/>
        request.body[\"categorised_documents[0]['file']\"] = UploadFile('path-to-cv-file') <br/>
        request.body[\"categorised_documents[0]['category']\"] = 'cv' <br/><br/>
        // Example of a cover letter file <br/>
        request.body[\"categorised_documents[1]['file']\"] = UploadFile('path-to-cover-letter') <br/>
        request.body[\"categorised_documents[1]['category']\"] = 'cover-letter'
        </pre>
        </p>
        <p>
        <strong>A note on documents</strong><br/>
        Documents need to be submitted as an upload stream not just with a plain file path. An example in pseudo code would be: <br/>
        <pre>
        val request = HttpRequest() <br/>
        request.body['document1'] = 'path-to-file' ----> WRONG <br/>
        request.body['document1'] = UploadFile('path-to-file') ----> CORRECT
        </pre>
        </p>
        <p>
        <strong>A note on spamming</strong><br/>
        Please be aware that the access_token in company with your company_id allows the creation of applications in your account. When building your own career page, we would recommend that you call our endpoints from a backend service, rather than from your frontend directly, in order to avoid making the token publicly accessible. In addition to this, we recommend the inclusion of a captcha or similar into your own career page to avoid bot applications.
        </p>
        <p>
        <strong>Rate limiting</strong><br/>
        Our applicant API is a rate limit of 100 applications in 60 seconds per IP address. After submitting this amount of applications, you will need to wait 60 seconds before you can submit more applications.
        </p>"
      requestBody:
        content:
          multipart/form-data:
            schema:
              $ref: "#/components/schemas/Applicant"
        description: Applicant data
        required: true
      responses:
        "200":
          description: "Everything went well and the application was created in Personio."
          content:
            application/json:
              examples:
                Success:
                  value:
                    success: true
                    data:
                      message: "Applicant successfully applied to the job position."
        "400":
          description: "Something went wrong and the application was not created in Personio. Specifically, the following cases can lead to an error 400:"
          content:
            application/json:
              examples:
                File too large:
                  value:
                    success: false
                    error:
                      message: "Unsupported extension or file greater than 20Mb."
                Unsupported file extension:
                  value:
                    success: false
                    error:
                      message: "Unsupported extension or file greater than 20Mb."
                Required field empty (e.g. name, email):
                  value:
                    success: false
                    error:
                      message: "The {field_name} field is required."
                Invalid custom attribute (custom attribute ID does not exist):
                  value:
                    success: false
                    error:
                      message: "Parameter {parameter_name} does not exist."
                Invalid job position:
                  value:
                    success: false
                    error:
                      message: "Could not find the job position."
                Applicant already applied:
                  value:
                    success: false
                    error:
                      message: "Applicant already applied to this position."
        "422":
          description: Something went wrong and the attachments could not be processed at this moment. Please try again.
          content:
            application/json:
              examples:
                Unprocessable Entity 1:
                  value:
                    success: false
                    error:
                      message: "There was a problem while processing attachments. Try again later"
                Unprocessable Entity 2:
                  value:
                    success: false
                    error:
                      message: "Job position not published"
        "403":
          description: Something went wrong and the application was not created in Personio. In this case, the API access token provided doesn't match the company ID.
          content:
            application/json:
              examples:
                Not Authorized:
                  value:
                    success: false
                    error:
                      message: "This action is unauthorized."
        "500":
          description: Something went wrong and the application was not created in Personio. This particular case the transaction failed due to an issue on Personio's end, e.g. server error.
          content:
            application/json:
              examples:
                Internal Server Error:
                  value:
                    success: false
                    error:
                      message: "Something went wrong, please try again later!"
        "503":
          description: The server is currently unable to handle the request due to a temporary overload or scheduled maintenance, which will likely be alleviated after some delay.
          content:
            application/json:
              examples:
                Service Unavailable:
                  value:
                    success: false
                    error:
                      message: "Service Unavailable"


servers:
  - url: https://api.personio.de
components:
  securitySchemes:
    BearerAuth:
      type: http
      scheme: bearer
  schemas:
    Response:
      title: Default response object
      type: object
      properties:
        success:
          type: boolean
        data:
          type: object
      required:
        - success
        - data

    XmlResponse:
      title: XmlResponse
      type: object
      properties:
        posting:
          type: array
          items:
            $ref: "#/components/schemas/JobPosting"
      xml:
        name: workzag-jobs

    JobPosting:
      title: Job Posting
      type: object
      properties:
        id:
          type: integer
          example: 4103
        subcompany:
          type: string
          example: ''
        office:
          type: string
          example: Munich
        department:
          type: string
          example: Management
        recruitingCategory:
          example: Various
        name:
          example: Office- und Feelgood Manager (m/w)
        jobDescriptions:
          title: Job Descriptions
          type: object
          properties:
            jobDescription:
              type: array
              items:
                $ref: "#/components/schemas/jobDescriptionItem"
        employmentType:
          type: string
          enum: ['permanent', 'intern', 'trainee', 'freelance']
          example: permanent
        seniority:
          type: string
          enum: ['entry-level', 'experienced', 'executive', 'student']
          example: entry-level
        schedule:
          type: string
          enum: ['full-time', 'part-time']
          example: full-time
        yearsOfExperience:
          type: string
          enum: ['lt-1', '1-2', '2-5', '5-7', '7-10', '10-15', 'gt-15']
          example: lt-1
        keywords:
          type: string
          example: office manager,project management,büro,assistenz,organisation,part time,Teilzeit
        occupation:
          example: office_management
        occupationCategory:
          example: administrative_and_clerical
        createdAt:
          example: 2016-05-31T12:14:07+0200
      xml:
        name: position

    jobDescriptionItem:
      type: array
      items:
        allOf:
          - $ref: "#/components/schemas/JobDescription"
      example:
        - name: Beschreibung
          value: <![CDATA[
            Für unser Büro mitten im Münchner Glockenbachviertel suchen wir zum nächstmöglichen Zeitpunkt einen Office Manager (m/w) in Teilzeit, der/ die sich um alle Themen rund ums Office zuverlässig kümmert.<br><br><strong>Deine Aufgaben:</strong><br><br><ul><li>Ansprechpartner in Sachen Büro, Ausstattung und anderer “Wohlfühl”-Themen, die unseren Mitarbeiter/innen auf dem Herzen liegen</li><li>Bearbeitung von generellen Anfragen, Post und Eingangsrechnungen</li><li>Kommunikation und Organisation unserer Servicedienstleister und Zulieferer</li><li>Selbstständige Entwicklung &amp; Umsetzung neuer Ideen, Aktionen und Events für unsere Mitarbeiter</li><li>Unterstützung unseres Management-Teams bei organisatorischen Aufgaben</li><li>Management unserer <strong><a href="http://www.unumotors.com">Unu-Elektroroller</a></strong>-Flotte (ja, du bekommst auch einen, wenn du möchtest)</li></ul>
            ]]>
        - name: Dein Profil
          value: <![CDATA[
            <ul><li>Du bist herzlich, offen und kommunikativ</li><li>Du bist ein Organisationstalent und magst den Umgang mit Zahlen</li><li>Du bist gewissenhaft, sorgfältig und strukturiert</li><li>Du zeigst Eigeninitiative und Kreativität bei der Planung neuer Aktionen</li><li>Du sprichst Deutsch auf muttersprachlichem Niveau und hast gute Englischkenntnisse</li><li>Du hast Spaß an vielfältigen Aufgaben und unterstützt gerne dort, wo Hilfe gebraucht wird</li></ul>
            ]]>
        - name: Warum Personio
          value: <![CDATA[
            <ul><li>Chance in einem schnell wachsenden Unternehmen an vielfältigen Aufgaben zu wachsen und zu lernen</li><li>Kreatives Arbeitsumfeld und kurze Entscheidungswege</li><li>Von Anfang an volle Verantwortung in Deinem Bereich</li><li>Regelmäßige Team-Events, Tischtennis und Ausflüge ins Münchner Nachtleben</li><li>Büro im Herzen von München (nahe Gärtnerplatz)</li><li>Blitzschneller Elektroroller deiner Wahl als “Geschäftswagen”</li></ul>
            ]]>

    JobDescription:
      title: Job Description
      type: object
      properties:
        jobDescription:
          type: object
          properties:
            name:
              type: string
            value:
              type: string

    Applicant:
      title: Applicant
      type: object
      properties:
        company_id:
          description: Your company ID (see endpoint description)
          type: integer
        access_token:
          description: API Access token for your company account (see endpoint description)
          type: string
        job_position_id:
          description: ID of the published job position that this application is for (from XML feed)
          type: integer
        first_name:
          description: First name of the applicant
          type: string
          maxLength: 255
        last_name:
          description: Last name of the applicant
          type: string
          maxLength: 255
        email:
          description: Email address of the applicant
          type: string
          maxLength: 255
        gender:
          description: Gender of the applicant
          type: string
          enum: [ male, female, diverse ]
        recruiting_channel_id:
          description: ID of the recruiting channel that this applicant applied through recruiting_channel_id has to match the id of a channel you created in Personio
          type: integer
        external_posting_id:
          description: When using multiposting, this is the `pid` forwarded (usually as a query param) by the external job board site
          type: string
          maxLength: 255
        phone:
          description: Phone number of the applicant
          type: string
          maxLength: 255
        location:
          description: Current location of the applicant
          type: string
          maxLength: 255
        salary_expectations:
          description: Salary expectations of the applicant (Will not be parsed, so you can transfer values like "minimum 50k")
          type: string
          maxLength: 255
        available_from:
          description: Date from which this applicant is available from
          type: string
          maxLength: 100
        categorised_documents[n][file]:
          description: Nth document <br/>
            The file should be an upload stream. <br/>
            You can check a request example in the "A note on categorised documents" section. <br/>
            [array of files] <br/>
            allowed extensions are 'pdf', 'docx', 'doc', 'jpg', 'png', 'txt', 'jpeg', 'odt', 'ods','xlsx', 'rtf', 'xls', 'pptx', 'ppt', 'gif', 'tif', 'tiff', 'bmp', 'csv', 'rar', 'gz', 'zip', '7z'; <br/>
            filesize per document < 20M; <br/>
            total post size < 64M; <br/>
          type: string
          format: binary
        categorised_documents[n][category]:
          description: Nth document's category <br/>
            Category of the Nth file. <br/>
            You can check a request example in the "A note on categorised documents" section. <br/>
            allowed values are 'cv', 'cover-letter', 'employment-reference', 'certificate', 'work-sample' or 'other' <br/>
          type: string
        documents[n]:
          description: Nth document <br/>
            The file should be an upload stream. <br/>
            allowed extensions are 'pdf', 'docx', 'doc', 'jpg', 'png', 'txt', 'jpeg', 'odt', 'ods','xlsx', 'rtf', 'xls', 'pptx', 'ppt', 'gif', 'tif', 'tiff', 'bmp', 'csv', 'rar', 'gz', 'zip', '7z'; <br/>
            filesize per document < 20M; <br/>
            total post size < 64M; <br/>
          type: string
          format: binary
        document{n}:
          description: Alternatively to an array (see 'documents'), documents can also be transferred individually numbered document1, document2, etc (the numbering starts at 1) with the absolute path to the document in an upload stream. <br/>
            [file] <br/>
            allowed extensions are 'pdf', 'docx', 'doc', 'jpg', 'png', 'txt', 'jpeg', 'odt', 'ods','xlsx', 'rtf', 'xls', 'pptx', 'ppt', 'gif', 'tif', 'tiff', 'bmp', 'csv', 'rar', 'gz', 'zip', '7z'; <br/>
            filesize per document < 20M; <br/>
            total post size < 64M <br/>
          type: object
          allOf:
            - $ref: "#/components/schemas/Document"
        message:
          description: Initial message from the applicant
          type: string
        tags:
          description: Existing tags (new ones cannot be created via API) <br/>
            [array of strings], e.g. [ “tag_1”, “tag_2" ]
        birthday:
          description: Birthday of the applicant. <br/>
            Date according to ISO 8601 format (YYYY-MM-DD)
          type: string
          format: date
        custom_attribute_{id}:
          description: "Custom applicant attribute. <br/>
            Custom applicant attributes that were created individually can also be passed. <br/>
            You can find the unique parameter names of these attributes in your Personio account under: <pre>https://mycompany.personio.de/configuration/recruiting/applicants</pre>"
          type: integer
      required:
        - company_id
        - access_token
        - job_position_id
        - first_name
        - last_name
        - email

    Document:
      title: Document
      type: object
      properties:
        file:
          type: string
          format: binary
          description: "allowed extensions are 'pdf', 'docx', 'doc', 'jpg', 'png', 'txt', 'jpeg', 'odt', 'ods','xlsx', 'rtf', 'xls', 'pptx', 'ppt', 'gif', 'tif', 'tiff', 'bmp', 'csv', 'rar', 'gz', 'zip', '7z'
            filesize per document < 20M
            total post size < 64M"
